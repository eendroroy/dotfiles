#!/usr/bin/env bash

# Copyright (c) 2025 Indrajit Roy
# Part of "dotfiles", licensed under GNU AGPLv3 or later
# See https://opensource.org/license/agpl-v3 for details.__CURRENT_DIR=$(pwd)

__handle_stdout() {
  while IFS= read -r line; do
    echo -e "\e[38;5;2m┃\e[0m  \e[38;5;10m$line\e[0m"
  done
}

__handle_stderr() {
  while IFS= read -r line; do
    echo -e "\e[38;5;1m┃\e[0m  \e[38;5;9m$line\e[0m" >&2
  done
}

__list() {
  find . -name ".git" -type d -print0 | while IFS= read -r -d '' dir; do
    repo_dir=$(dirname "$dir")
    (cd "$repo_dir" && \
      printf "\e[32m%s\e[m \e[33m%s\e[m \e[35m%s\e[m \e[33m%s\e[m \e[96m%s\e[m\n" \
        "$(git branch --show-current)" \
        "$(git log -1 --format="%h" --abbrev=8)" \
        "${PWD#"${__CURRENT_DIR}/"}" \
        "$(git log -1 --format="%cr")" \
        "$(git log -1 --format="%ae")"
    )
  done
}

__help() {
  echo -e "\e[37mUsage:\e[0m\e[38;5;2m gitter\e[0m \e[38;5;3m[command]\e[0m \e[38;5;6m[args]\e[0m"
  echo
  echo -e "\e[37mCommands:\e[0m"
  echo -e "  \e[38;5;3mhelp\e[0m                           \e[2mShow this help menu\e[m"
  echo -e "  \e[38;5;3mlist\e[0m                           \e[2mList all git repos\e[m"
  echo -e "  \e[38;5;3mall, -a <command>\e[0m             \e[2mRun git <command> in all directories\e[m"
  echo -e "  \e[38;5;3mrepo, -r <directory> <command>\e[0m \e[2mRun git <command> in <directory>\e[m"
  echo -e "  [all|repo] exec, -e <command>\e[0m           \e[2mRun exec <command>\e[m"
  echo -e "                                           all in all directories"
  echo -e "                                           all in <directory>"
}

__accept_no_arg() {
  if [[ -n $1 ]]; then
    echo
    echo -e "\e[1;31mUnknown argument:\e[0m $1"
    echo
    __help
    exit 1
  fi
}

case "$1" in
  help)
    shift
    __accept_no_arg "$1"
    __help
    exit 0
    ;;
  list)
    shift
    __accept_no_arg "$1"
    __list
    exit 0
    ;;
  all|-a)
    shift
    command='git'
    if [[ $1 == "exec" || $1 == "-e" ]]; then
      command='exec'
      shift
    fi
    find . -name ".git" -type d -print0 | while IFS= read -r -d '' dir; do
      repo_dir=$(dirname "$dir")
      echo -e "\e[38;5;2m┣━ \e[1;38;5;2m(${command} $*)\e[m \e[90min\e[m \e[35m$repo_dir\e[m"
      (cd "$repo_dir" && "${command}" "$@" 2> >(__handle_stderr) 1> >(__handle_stdout))
    done
    exit 0
    ;;
  repo|-r)
    if [[ $# -ge 3 ]]; then
      shift
      repo_dir=$1
      shift
      command='git'
      if [[ $1 == "exec" || $1 == "-e" ]]; then
        command='exec'
        shift
      fi
      echo -e "\e[38;5;2m┣━ \e[1;38;5;2m(${command} $*)\e[m \e[90min\e[m \e[35m$repo_dir\e[m"
      (cd "$repo_dir" && "${command}" "$@" 2> >(__handle_stderr) 1> >(__handle_stdout))
      exit 0
    fi
    ;;
esac

echo
echo -e "\e[91mInvalid usage.\e[m"
echo
__help
exit 1